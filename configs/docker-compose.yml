services:
  backend:
    tty: true
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && npx prisma db seed  && npm run start:dev"
    build:
      context: ../
      dockerfile: configs/Dockerfile.backend
    ports:
      - "${PORT}:${PORT}" 
      - "${PRISMA_STUDIO_PORT}:${PRISMA_STUDIO_PORT}"
    volumes:
      - ../src:/usr/app/src
      - ../prisma:/usr/app/prisma
    environment:
      PORT: ${PORT}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_URL: ${DATABASE_CLIENT}://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}
      NODE_ENV: ${NODE_ENV}
      # This is for hot reloading between windows-linux machines
      WDS_SOCKET_HOST: ${WDS_SOCKET_HOST}
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING}
      TS_NODE_DEV: ${TS_NODE_DEV}
      WATCHPACK_POLLING: ${WATCHPACK_POLLING}
      # for auth and refreshing
      CRYPT_SALT: ${CRYPT_SALT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_SECRET_REFRESH_KEY: ${JWT_SECRET_REFRESH_KEY}
      TOKEN_EXPIRE_TIME: ${TOKEN_EXPIRE_TIME}
      TOKEN_REFRESH_EXPIRE_TIME: ${TOKEN_REFRESH_EXPIRE_TIME}
    networks:
      - network_db
  db:
    image: postgres:14.1-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: always
    ports:
      - "${DB_PORT}:5432" 
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - network_db

networks:
  network_db:
volumes:
  db:
