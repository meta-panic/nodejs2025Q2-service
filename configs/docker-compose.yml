services:
  backend:
    tty: true
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && npx prisma db seed  && npm run start:dev"
    build:
      context: ../
      dockerfile: configs/Dockerfile.backend
    ports:
      - "4000:4000"
      - "5555:5555"
    volumes:
      - ${DEV_BACKEND_SRC_PATH}/src:/usr/app/src
      - ${DEV_BACKEND_SRC_PATH}/prisma:/usr/app/prisma
      - ${DEV_BACKEND_SRC_PATH}/test:/usr/app/test
    environment:
      PORT: ${PORT}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_CLIENT: postgres
      DATABASE_URL: postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db:${DATABASE_PORT}/${DATABASE_NAME}
      WDS_SOCKET_HOST: 127.0.0.1
      CHOKIDAR_USEPOLLING: 1
      TS_NODE_DEV: true
      WATCHPACK_POLLING: true
      NODE_ENV: development
    networks:
      - network_db
  db:
    image: postgres:14.1-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - network_db

networks:
  network_db:
volumes:
  db:
